Create database DBProject;

DROP DATABASE DBProject

Use DBProject;

CREATE TABLE USERS
(
   U_ID INT NOT NULL PRIMARY KEY,
   FULLNAME VARCHAR(255) NOT NULL,
   GENDER Varchar (20) NOT NULL CHECK (GENDER IN('Male','Female')),
   DOB DATE NOT NULL,
   CNIC VARCHAR(16) NOT NULL,
   PHONENO VARCHAR(13),
   EMAIL VARCHAR(255) NOT NULL UNIQUE,
   U_PASSWORD VARCHAR(255) NOT NULL,
   U_ROLE Varchar (255) NOT NULL CHECK (U_ROLE IN('Administrator','Faculty','Student'))
);

CREATE TABLE ADMINISTRATOR
(
   A_ID INT NOT NULL PRIMARY KEY,
   FOREIGN KEY (A_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE DEPARTMENT
(
   DEPT_ID INT NOT NULL PRIMARY KEY,
   DNAME VARCHAR(255) NOT NULL,
); 

CREATE TABLE CAMPUS
(
   CAMPUS_ID INT NOT NULL PRIMARY KEY,
   CAMNAME VARCHAR(255) NOT NULL,
); 

CREATE TABLE DEGREE
(
   D_ID INT NOT NULL PRIMARY KEY,
   DNAME VARCHAR(50) NOT NULL
);

CREATE TABLE BATCH
(
   B_ID INT NOT NULL PRIMARY KEY,
   BNAME VARCHAR(50) NOT NULL
);

CREATE TABLE SEMESTER
(
   SEM_ID INT NOT NULL PRIMARY KEY,
   SNAME VARCHAR(255) NOT NULL,
   CREDITSALLOWED INT NOT NULL, --CREDITS ALLOWED PER SEMESTER
   COURSESALLOWED INT NOT NULL--Courses allowed per semester
);

CREATE TABLE GRADES
(
   G_ID INT NOT NULL PRIMARY KEY,
   TMARKS INT NOT NULL,
   GRADE VARCHAR (3) NOT NULL CHECK (GRADE IN('A+','A','A-','B+','B','B-','C+','C','C-','D+','D','F')),
   GPOINTS FLOAT NOT NULL
);

DROP TABLE GRADES

CREATE TABLE FACULTY
(
   F_ID INT PRIMARY KEY,
   COORDINATOR INT,
   DEPART_ID INT NOT NULL,
   FCAMPUS INT NOT NULL,
   OFFICE VARCHAR(255) NOT NULL,
   FTYPE VARCHAR (20) NOT NULL CHECK (FTYPE IN('Lab Instructor','Course Instructor')),
   CTEACHING INT NOT NULL CHECK (CTEACHING <=3), --No. of courses teaching
   FOREIGN KEY (F_ID) REFERENCES USERS(U_ID) ON UPDATE CASCADE,
   FOREIGN KEY (COORDINATOR) REFERENCES USERS(U_ID),
   FOREIGN KEY (DEPART_ID) REFERENCES DEPARTMENT(DEPT_ID),
   FOREIGN KEY (FCAMPUS) REFERENCES CAMPUS(CAMPUS_ID)
);


CREATE TABLE COURSES
(
   C_ID INT NOT NULL PRIMARY KEY,
   SEMESTER_ID INT NOT NULL,
   CCODE VARCHAR(10) NOT NULL,
   CNAME VARCHAR(255) NOT NULL,
   CREDITS INT NOT NULL CHECK (CREDITS <=3), --COURSE CREDITS
   CTYPE VARCHAR (10) NOT NULL CHECK (CTYPE IN('Theory','Lab')),
   PREREQ VARCHAR(255),
   FOREIGN KEY (SEMESTER_ID) REFERENCES SEMESTER(SEM_ID)
);

CREATE TABLE FACULTY_COURSES
(
   FC_ID INT NOT NULL PRIMARY KEY,
   FACULTY_ID INT NOT NULL,
   COURSE_ID INT NOT NULL,
   FOREIGN KEY (COURSE_ID) REFERENCES COURSES(C_ID),
   FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(F_ID),
);



CREATE TABLE SECTION
(
   SEC_ID INT NOT NULL PRIMARY KEY,
   FAC_ID INT NOT NULL,
   COURSE_ID INT NOT NULL,
   SECNAME VARCHAR(8) NOT NULL, 
   STYPE VARCHAR (10) NOT NULL CHECK (STYPE IN('Theory','Lab')),
   TSTUDENT INT NOT NULL CHECK (TSTUDENT >=10 AND TSTUDENT <=50),
   FOREIGN KEY (FAC_ID) REFERENCES FACULTY(F_ID),
   FOREIGN KEY (COURSE_ID) REFERENCES COURSES(C_ID)
);


CREATE TABLE STUDENT
(
   S_ID INT NOT NULL PRIMARY KEY,
   ROLL_NO VARCHAR(8) UNIQUE,
   SCAMPUS INT NOT NULL,
   SDEGREE INT NOT NULL,
   SBATCH INT NOT NULL,
   A_HouseNo VARCHAR (255) NOT NULL,
   A_Street VARCHAR(255) NOT NULL,  
   A_City VARCHAR (255) NOT NULL,
   FOREIGN KEY (S_ID) REFERENCES USERS(U_ID), 
   FOREIGN KEY (SCAMPUS) REFERENCES CAMPUS(CAMPUS_ID),
   FOREIGN KEY (SDEGREE) REFERENCES DEGREE(D_ID),
   FOREIGN KEY (SBATCH) REFERENCES BATCH(B_ID)
);

CREATE TABLE STUDENT_SECTION
(
   STUDENT_ID INT NOT NULL,
   SECTION_ID INT NOT NULL,
   FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(S_ID),
   FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SEC_ID)
);


CREATE TABLE STUDENT_SEMESTER
(
   SM_ID INT NOT NULL PRIMARY KEY,
   STU_ID INT NOT NULL,
   SEMESTER_ID INT NOT NULL,
   SGPA FLOAT CHECK (SGPA <= 4.00),
   FOREIGN KEY (STU_ID) REFERENCES STUDENT(S_ID),
   FOREIGN KEY (SEMESTER_ID) REFERENCES SEMESTER(SEM_ID)
);


CREATE TABLE STUDENT_DEGREE
(
   STU_ID INT NOT NULL,
   DEG_ID INT NOT NULL,
   STARTTIME DATETIME,
   ENDTIME DATETIME,
   FOREIGN KEY (DEG_ID) REFERENCES DEGREE(D_ID),
   FOREIGN KEY (STU_ID) REFERENCES STUDENT(S_ID)
);


CREATE TABLE STUDENT_COURSES
(
   SC_ID INT NOT NULL PRIMARY KEY,
   STUDENT_ID INT NOT NULL,
   COURSE_ID INT NOT NULL,
   GRADE_ID INT,
   FOREIGN KEY (COURSE_ID) REFERENCES COURSES(C_ID),
   FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(S_ID),
   FOREIGN KEY (GRADE_ID) REFERENCES GRADES(G_ID)
);



CREATE TABLE ATTENDANCE
(
   A_ID INT NOT NULL PRIMARY KEY,
   SC_ID INT NOT NULL, --Student registered course as foreign key
   LECTURE_NO INT NOT NULL, --Lecture no. of the attendance of specific course
   LDATE DATE NOT NULL,
   DURATION FLOAT NOT NULL,
   PRESENCE VARCHAR (3) NOT NULL CHECK (PRESENCE IN('P','A','L')),
   FOREIGN KEY (SC_ID) REFERENCES STUDENT_COURSES(SC_ID)
);


CREATE TABLE EVALUATION
(
   E_ID INT NOT NULL PRIMARY KEY,
   SC_ID INT NOT NULL, --Student registered course as foreign key
   WEIGHTAGE FLOAT NOT NULL,
   OBTAINEDMARKS FLOAT NOT NULL,
   TOTALMARKS FLOAT NOT NULL,
   AVERAGE FLOAT NOT NULL,
   MINIMUM FLOAT NOT NULL,
   MAXIMUM FLOAT NOT NULL,
   FOREIGN KEY (SC_ID) REFERENCES STUDENT_COURSES(SC_ID)
);

CREATE TABLE FEEDBACK
(
   FEED_ID INT NOT NULL PRIMARY KEY,
   STUDENT_ID INT NOT NULL,
   FACULTY_ID INT NOT NULL,
   FDATE DATE NOT NULL, 
   Q1 INT NOT NULL CHECK (Q1 >=1 AND Q1 <=5), 
   Q2 INT NOT NULL CHECK (Q2 >=1 AND Q2 <=5),
   Q3 INT NOT NULL CHECK (Q3 >=1 AND Q3 <=5), 
   Q4 INT NOT NULL CHECK (Q4 >=1 AND Q4 <=5), 
   Q5 INT NOT NULL CHECK (Q5 >=1 AND Q5 <=5), 
   Q6 INT NOT NULL CHECK (Q6 >=1 AND Q6 <=5), 
   Q7 INT NOT NULL CHECK (Q7 >=1 AND Q7 <=5), 
   Q8 INT NOT NULL CHECK (Q8 >=1 AND Q8 <=5), 
   Q9 INT NOT NULL CHECK (Q9 >=1 AND Q9 <=5), 
   Q10 INT NOT NULL CHECK (Q10 >=1 AND Q10 <=5), 
   Q11 INT NOT NULL CHECK (Q11 >=1 AND Q11 <=5), 
   Q12 INT NOT NULL CHECK (Q12 >=1 AND Q12 <=5), 
   Q13 INT NOT NULL CHECK (Q13 >=1 AND Q13 <=5), 
   Q14 INT NOT NULL CHECK (Q14 >=1 AND Q14 <=5), 
   Q15 INT NOT NULL CHECK (Q15 >=1 AND Q15 <=5), 
   Q16 INT NOT NULL CHECK (Q16 >=1 AND Q16 <=5), 
   Q17 INT NOT NULL CHECK (Q17 >=1 AND Q17 <=5), 
   Q18 INT NOT NULL CHECK (Q18 >=1 AND Q18 <=5), 
   Q19 INT NOT NULL CHECK (Q19 >=1 AND Q19 <=5), 
   Q20 INT NOT NULL CHECK (Q20 >=1 AND Q20 <=5), 
   COMMENTS VARCHAR(255),
   FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(S_ID),
   FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(F_ID)
);

CREATE TABLE MARKS_DISTRIBUTION
(
   MARK_ID INT NOT NULL PRIMARY KEY,
   COURSE_ID INT NOT NULL,
   SECTION_ID INT NOT NULL,
   ASSIGNMENT Numeric(2),
   QUIZZES Numeric(2),
   SESSIONAL_1 Numeric(2),
   SESSIONAL_2 Numeric(2),
   FINAL_EXAM Numeric(2),
   FOREIGN KEY (COURSE_ID) REFERENCES COURSES(C_ID),
   FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SEC_ID)
);
